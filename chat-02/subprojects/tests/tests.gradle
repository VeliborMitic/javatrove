/*
 * Copyright 2016-2020 Andres Almiray
 *
 * This file is part of Java Trove Examples
 *
 * Java Trove Examples is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Java Trove Examples is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Java Trove Examples. If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.5'
}

dependencies {
    testImplementation project(':client')
    testImplementation project(':server')

    testImplementation 'org.kordamp.testfx:testfx-dsl:0.1.0'
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.jukito:jukito:$jukitoVersion"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
    testImplementation "org.awaitility:awaitility:$awaitilityVersion"
    testImplementation "org.testfx:testfx-core:$testfxVersion"
    testImplementation "org.testfx:testfx-junit:$testfxVersion"
}

ext.dependentProjects = [':shared', ':client', ':server']

dependentProjects.each { evaluationDependsOn it }

jacocoTestReport {
    group = 'Reporting'
    description = 'Generate Jacoco coverage reports after running tests.'

    List _classDirectories = [project(':tests').sourceSets.main.output.classesDirs.asPath]
    Set _sourceDirectories =[project(':tests').sourceSets.main.allSource.srcDirs] as Set
    project.dependentProjects.each { String projectName ->
        _classDirectories << project(projectName).sourceSets.main.output.classesDirs.asPath
        _sourceDirectories << project(projectName).sourceSets.main.allSource.srcDirs
    }

    additionalSourceDirs.from project.files(_sourceDirectories)
    sourceDirectories.from project.files(_sourceDirectories)
    classDirectories.from project.files(_classDirectories)

    reports {
        xml.enabled = true
        csv.enabled = false
        html.enabled = true
    }
}
